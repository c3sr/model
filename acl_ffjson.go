// Code generated by ffjson <https://github.com/pquerna/ffjson>. DO NOT EDIT.
// source: acl.go

package model

import (
	fflib "github.com/pquerna/ffjson/fflib/v1"
)

// MarshalJSON marshal bytes to json - template
func (j *ACL) MarshalJSON() ([]byte, error) {
	var buf fflib.Buffer
	if j == nil {
		buf.WriteString("null")
		return buf.Bytes(), nil
	}
	err := j.MarshalJSONBuf(&buf)
	if err != nil {
		return nil, err
	}
	return buf.Bytes(), nil
}

// MarshalJSONBuf marshal buff to json - template
func (j *ACL) MarshalJSONBuf(buf fflib.EncodingBuffer) error {
	if j == nil {
		buf.WriteString("null")
		return nil
	}
	var err error
	var obj []byte
	_ = obj
	_ = err
	buf.WriteString(`{"MaxRuntimeLimit":`)
	fflib.FormatBits2(buf, uint64(j.MaxRuntimeLimit), 10, j.MaxRuntimeLimit < 0)
	buf.WriteString(`,"MaxStorageLimit":`)
	fflib.FormatBits2(buf, uint64(j.MaxStorageLimit), 10, false)
	if j.NetworkAccess {
		buf.WriteString(`,"NetworkAccess":true`)
	} else {
		buf.WriteString(`,"NetworkAccess":false`)
	}
	if j.MountAccess {
		buf.WriteString(`,"MountAccess":true`)
	} else {
		buf.WriteString(`,"MountAccess":false`)
	}
	buf.WriteByte('}')
	return nil
}
