// Code generated by ffjson <https://github.com/pquerna/ffjson>. DO NOT EDIT.
// source: user.go

package model

import (
	fflib "github.com/pquerna/ffjson/fflib/v1"
)

// MarshalJSON marshal bytes to json - template
func (j *User) MarshalJSON() ([]byte, error) {
	var buf fflib.Buffer
	if j == nil {
		buf.WriteString("null")
		return buf.Bytes(), nil
	}
	err := j.MarshalJSONBuf(&buf)
	if err != nil {
		return nil, err
	}
	return buf.Bytes(), nil
}

// MarshalJSONBuf marshal buff to json - template
func (j *User) MarshalJSONBuf(buf fflib.EncodingBuffer) error {
	if j == nil {
		buf.WriteString("null")
		return nil
	}
	var err error
	var obj []byte
	_ = obj
	_ = err
	buf.WriteString(`{"firstname":`)
	fflib.WriteJsonString(buf, string(j.Firstname))
	buf.WriteString(`,"lastname":`)
	fflib.WriteJsonString(buf, string(j.Lastname))
	buf.WriteString(`,"username":`)
	fflib.WriteJsonString(buf, string(j.Username))
	buf.WriteString(`,"email":`)
	fflib.WriteJsonString(buf, string(j.Email))
	buf.WriteString(`,"access_key":`)
	fflib.WriteJsonString(buf, string(j.AccessKey))
	buf.WriteString(`,"secret_key":`)
	fflib.WriteJsonString(buf, string(j.SecretKey))
	buf.WriteString(`,"affiliation":`)
	fflib.WriteJsonString(buf, string(j.Affiliation))
	buf.WriteString(`,"password":`)
	fflib.WriteJsonString(buf, string(j.Password))
	if j.Team != nil {
		buf.WriteString(`,"team":`)

		{

			err = j.Team.MarshalJSONBuf(buf)
			if err != nil {
				return err
			}

		}
	} else {
		buf.WriteString(`,"team":null`)
	}
	buf.WriteByte(',')
	if j.DockerHub != nil {
		if true {
			buf.WriteString(`"dockerhub":`)

			{

				err = j.DockerHub.MarshalJSONBuf(buf)
				if err != nil {
					return err
				}

			}
			buf.WriteByte(',')
		}
	}
	buf.WriteString(`"role":`)
	fflib.WriteJsonString(buf, string(j.Role))
	buf.WriteByte(',')
	if true {
		buf.WriteString(`"acl":`)

		{

			err = j.ACL.MarshalJSONBuf(buf)
			if err != nil {
				return err
			}

		}
		buf.WriteByte(',')
	}
	buf.WriteString(`"id":`)
	fflib.WriteJsonString(buf, string(j.ID))
	buf.WriteString(`,"created_at":`)

	{

		obj, err = j.CreatedAt.MarshalJSON()
		if err != nil {
			return err
		}
		buf.Write(obj)

	}
	buf.WriteString(`,"updated_at":`)

	{

		obj, err = j.UpdatedAt.MarshalJSON()
		if err != nil {
			return err
		}
		buf.Write(obj)

	}
	if j.DeletedAt != nil {
		buf.WriteString(`,"deleted_at":`)

		{

			obj, err = j.DeletedAt.MarshalJSON()
			if err != nil {
				return err
			}
			buf.Write(obj)

		}
	} else {
		buf.WriteString(`,"deleted_at":null`)
	}
	buf.WriteByte('}')
	return nil
}
